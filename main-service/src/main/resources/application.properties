spring.application.name=main-service
#spring.profiles.active=
spring.config.import=optional:configserver:http://localhost:9000/configurationService
server.port=8080
server.servlet.context-path=/mainService

#Service discovery
#eureka.instance.preferIpAddress=true
#eureka.client.registerWithEureka=true
#eureka.client.fetchRegistry=true
#eureka.client.serviceUrl.defaultZone=http://localhost:8080/eureka

#Rabbit MQ
spring.rabbitmq.host=54.255.173.121
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

#Actuator
#management.endpoints.web.exposure.include=*
#management.endpoint.shutdown.enabled=true
#management.info.env.enabled=true
#
#endpoints.shutdown.enabled=true
#
#info.app.name=Main Service
#info.app.description=Hi Tech bank API
#info.app.version=1.0.0

#JDBC
spring.datasource.url=jdbc:mysql://192.168.137.1:3306/mainServiceDB
spring.datasource.username=sammy
spring.datasource.password=Ch@ddu001
spring.jpa.properties.hibernate.hbm2ddl.auto=update
#Not preferred for prod
spring.jpa.hibernate.ddl-auto=create
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

#Swagger
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

#Spring Security
#spring.security.user.name=scott
#spring.security.user.password=test123

spring.kafka.producer.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.properties.retries=2
spring.kafka.producer.properties.retry.backoff.ms=1000

spring.kafka.topic=library-events
spring.kafka.admin.properties.bootstrap.servers=localhost:9092,localhost:9093,localhost:9094

spring.kafka.consumer.bootstrap-servers=localhost:9092,localhost:9093,localhost:9094
spring.kafka.consumer.key-serializer=org.apache.kafka.common.serialization.IntegerSerializer
spring.kafka.consumer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.consumer.group-id=library-events-listener-group


#spring.kafka.template.default-topic=library-events
#
#spring.kafka.producer.properties.acks=all
#spring.kafka.producer.properties.retries=10
#spring.kafka.producer.properties.retry.backoff.ms=1000
#
#spring.kafka.producer.ssl.trust-store-location=file:/System/Volumes/Data/Dilip/udemy/kafka-for-developers-using-spring-boot/ssl/client.truststore.jks
#spring.kafka.producer.ssl.trust-store-password=password
#spring.kafka.producer.ssl.key-store-location=file:/System/Volumes/Data/Dilip/udemy/kafka-for-developers-using-spring-boot/ssl/client.keystore.jks
#spring.kafka.producer.ssl.key-store-password=password
#spring.kafka.producer.properties.security.protocol=SSL
#spring.kafka.producer.properties.ssl.endpoint.identification.algorithm=null


